//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.34014
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by Microsoft.VSDesigner, Version 4.0.30319.34014.
// 
#pragma warning disable 1591

namespace EODDataService.EODDataSvc {
    using System;
    using System.Web.Services;
    using System.Diagnostics;
    using System.Web.Services.Protocols;
    using System.Xml.Serialization;
    using System.ComponentModel;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="DataSoap", Namespace="http://ws.eoddata.com/Data")]
    public partial class Data : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback LoginOperationCompleted;
        
        private System.Threading.SendOrPostCallback Login2OperationCompleted;
        
        private System.Threading.SendOrPostCallback MembershipOperationCompleted;
        
        private System.Threading.SendOrPostCallback ExchangeListOperationCompleted;
        
        private System.Threading.SendOrPostCallback ExchangeGetOperationCompleted;
        
        private System.Threading.SendOrPostCallback SymbolListOperationCompleted;
        
        private System.Threading.SendOrPostCallback SymbolList2OperationCompleted;
        
        private System.Threading.SendOrPostCallback QuoteGetOperationCompleted;
        
        private System.Threading.SendOrPostCallback QuoteList2OperationCompleted;
        
        private System.Threading.SendOrPostCallback SymbolGetOperationCompleted;
        
        private System.Threading.SendOrPostCallback QuoteListOperationCompleted;
        
        private System.Threading.SendOrPostCallback FundamentalListOperationCompleted;
        
        private System.Threading.SendOrPostCallback TechnicalListOperationCompleted;
        
        private System.Threading.SendOrPostCallback QuoteListByDateOperationCompleted;
        
        private System.Threading.SendOrPostCallback QuoteListByDate2OperationCompleted;
        
        private System.Threading.SendOrPostCallback SymbolHistoryOperationCompleted;
        
        private System.Threading.SendOrPostCallback Top10GainsOperationCompleted;
        
        private System.Threading.SendOrPostCallback Top10LossesOperationCompleted;
        
        private System.Threading.SendOrPostCallback SymbolChartOperationCompleted;
        
        private System.Threading.SendOrPostCallback ExchangeMonthsOperationCompleted;
        
        private System.Threading.SendOrPostCallback SplitListByExchangeOperationCompleted;
        
        private System.Threading.SendOrPostCallback SplitListBySymbolOperationCompleted;
        
        private System.Threading.SendOrPostCallback CountryListOperationCompleted;
        
        private System.Threading.SendOrPostCallback SymbolHistoryPeriodOperationCompleted;
        
        private System.Threading.SendOrPostCallback SymbolHistoryPeriodByDateRangeOperationCompleted;
        
        private System.Threading.SendOrPostCallback QuoteListByDatePeriodOperationCompleted;
        
        private System.Threading.SendOrPostCallback QuoteListByDatePeriod2OperationCompleted;
        
        private System.Threading.SendOrPostCallback SymbolChangesByExchangeOperationCompleted;
        
        private System.Threading.SendOrPostCallback DataClientLatestVersionOperationCompleted;
        
        private System.Threading.SendOrPostCallback DataFormatsOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateDataFormatOperationCompleted;
        
        private System.Threading.SendOrPostCallback ValidateAccessOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public Data() {
            this.Url = global::EODDataService.Properties.Settings.Default.EODDataService_EODDataSvc_Data;//.EODDataService_EODDataWebService_Data;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event LoginCompletedEventHandler LoginCompleted;
        
        /// <remarks/>
        public event Login2CompletedEventHandler Login2Completed;
        
        /// <remarks/>
        public event MembershipCompletedEventHandler MembershipCompleted;
        
        /// <remarks/>
        public event ExchangeListCompletedEventHandler ExchangeListCompleted;
        
        /// <remarks/>
        public event ExchangeGetCompletedEventHandler ExchangeGetCompleted;
        
        /// <remarks/>
        public event SymbolListCompletedEventHandler SymbolListCompleted;
        
        /// <remarks/>
        public event SymbolList2CompletedEventHandler SymbolList2Completed;
        
        /// <remarks/>
        public event QuoteGetCompletedEventHandler QuoteGetCompleted;
        
        /// <remarks/>
        public event QuoteList2CompletedEventHandler QuoteList2Completed;
        
        /// <remarks/>
        public event SymbolGetCompletedEventHandler SymbolGetCompleted;
        
        /// <remarks/>
        public event QuoteListCompletedEventHandler QuoteListCompleted;
        
        /// <remarks/>
        public event FundamentalListCompletedEventHandler FundamentalListCompleted;
        
        /// <remarks/>
        public event TechnicalListCompletedEventHandler TechnicalListCompleted;
        
        /// <remarks/>
        public event QuoteListByDateCompletedEventHandler QuoteListByDateCompleted;
        
        /// <remarks/>
        public event QuoteListByDate2CompletedEventHandler QuoteListByDate2Completed;
        
        /// <remarks/>
        public event SymbolHistoryCompletedEventHandler SymbolHistoryCompleted;
        
        /// <remarks/>
        public event Top10GainsCompletedEventHandler Top10GainsCompleted;
        
        /// <remarks/>
        public event Top10LossesCompletedEventHandler Top10LossesCompleted;
        
        /// <remarks/>
        public event SymbolChartCompletedEventHandler SymbolChartCompleted;
        
        /// <remarks/>
        public event ExchangeMonthsCompletedEventHandler ExchangeMonthsCompleted;
        
        /// <remarks/>
        public event SplitListByExchangeCompletedEventHandler SplitListByExchangeCompleted;
        
        /// <remarks/>
        public event SplitListBySymbolCompletedEventHandler SplitListBySymbolCompleted;
        
        /// <remarks/>
        public event CountryListCompletedEventHandler CountryListCompleted;
        
        /// <remarks/>
        public event SymbolHistoryPeriodCompletedEventHandler SymbolHistoryPeriodCompleted;
        
        /// <remarks/>
        public event SymbolHistoryPeriodByDateRangeCompletedEventHandler SymbolHistoryPeriodByDateRangeCompleted;
        
        /// <remarks/>
        public event QuoteListByDatePeriodCompletedEventHandler QuoteListByDatePeriodCompleted;
        
        /// <remarks/>
        public event QuoteListByDatePeriod2CompletedEventHandler QuoteListByDatePeriod2Completed;
        
        /// <remarks/>
        public event SymbolChangesByExchangeCompletedEventHandler SymbolChangesByExchangeCompleted;
        
        /// <remarks/>
        public event DataClientLatestVersionCompletedEventHandler DataClientLatestVersionCompleted;
        
        /// <remarks/>
        public event DataFormatsCompletedEventHandler DataFormatsCompleted;
        
        /// <remarks/>
        public event UpdateDataFormatCompletedEventHandler UpdateDataFormatCompleted;
        
        /// <remarks/>
        public event ValidateAccessCompletedEventHandler ValidateAccessCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://ws.eoddata.com/Data/Login", RequestNamespace="http://ws.eoddata.com/Data", ResponseNamespace="http://ws.eoddata.com/Data", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public LOGINRESPONSE Login(string Username, string Password) {
            object[] results = this.Invoke("Login", new object[] {
                        Username,
                        Password});
            return ((LOGINRESPONSE)(results[0]));
        }
        
        /// <remarks/>
        public void LoginAsync(string Username, string Password) {
            this.LoginAsync(Username, Password, null);
        }
        
        /// <remarks/>
        public void LoginAsync(string Username, string Password, object userState) {
            if ((this.LoginOperationCompleted == null)) {
                this.LoginOperationCompleted = new System.Threading.SendOrPostCallback(this.OnLoginOperationCompleted);
            }
            this.InvokeAsync("Login", new object[] {
                        Username,
                        Password}, this.LoginOperationCompleted, userState);
        }
        
        private void OnLoginOperationCompleted(object arg) {
            if ((this.LoginCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.LoginCompleted(this, new LoginCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://ws.eoddata.com/Data/Login2", RequestNamespace="http://ws.eoddata.com/Data", ResponseNamespace="http://ws.eoddata.com/Data", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public LOGINRESPONSE Login2(string Username, string Password, string Version) {
            object[] results = this.Invoke("Login2", new object[] {
                        Username,
                        Password,
                        Version});
            return ((LOGINRESPONSE)(results[0]));
        }
        
        /// <remarks/>
        public void Login2Async(string Username, string Password, string Version) {
            this.Login2Async(Username, Password, Version, null);
        }
        
        /// <remarks/>
        public void Login2Async(string Username, string Password, string Version, object userState) {
            if ((this.Login2OperationCompleted == null)) {
                this.Login2OperationCompleted = new System.Threading.SendOrPostCallback(this.OnLogin2OperationCompleted);
            }
            this.InvokeAsync("Login2", new object[] {
                        Username,
                        Password,
                        Version}, this.Login2OperationCompleted, userState);
        }
        
        private void OnLogin2OperationCompleted(object arg) {
            if ((this.Login2Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Login2Completed(this, new Login2CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://ws.eoddata.com/Data/Membership", RequestNamespace="http://ws.eoddata.com/Data", ResponseNamespace="http://ws.eoddata.com/Data", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public RESPONSE Membership(string Token) {
            object[] results = this.Invoke("Membership", new object[] {
                        Token});
            return ((RESPONSE)(results[0]));
        }
        
        /// <remarks/>
        public void MembershipAsync(string Token) {
            this.MembershipAsync(Token, null);
        }
        
        /// <remarks/>
        public void MembershipAsync(string Token, object userState) {
            if ((this.MembershipOperationCompleted == null)) {
                this.MembershipOperationCompleted = new System.Threading.SendOrPostCallback(this.OnMembershipOperationCompleted);
            }
            this.InvokeAsync("Membership", new object[] {
                        Token}, this.MembershipOperationCompleted, userState);
        }
        
        private void OnMembershipOperationCompleted(object arg) {
            if ((this.MembershipCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.MembershipCompleted(this, new MembershipCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://ws.eoddata.com/Data/ExchangeList", RequestNamespace="http://ws.eoddata.com/Data", ResponseNamespace="http://ws.eoddata.com/Data", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public RESPONSE ExchangeList(string Token) {
            object[] results = this.Invoke("ExchangeList", new object[] {
                        Token});
            return ((RESPONSE)(results[0]));
        }
        
        /// <remarks/>
        public void ExchangeListAsync(string Token) {
            this.ExchangeListAsync(Token, null);
        }
        
        /// <remarks/>
        public void ExchangeListAsync(string Token, object userState) {
            if ((this.ExchangeListOperationCompleted == null)) {
                this.ExchangeListOperationCompleted = new System.Threading.SendOrPostCallback(this.OnExchangeListOperationCompleted);
            }
            this.InvokeAsync("ExchangeList", new object[] {
                        Token}, this.ExchangeListOperationCompleted, userState);
        }
        
        private void OnExchangeListOperationCompleted(object arg) {
            if ((this.ExchangeListCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ExchangeListCompleted(this, new ExchangeListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://ws.eoddata.com/Data/ExchangeGet", RequestNamespace="http://ws.eoddata.com/Data", ResponseNamespace="http://ws.eoddata.com/Data", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public RESPONSE ExchangeGet(string Token, string Exchange) {
            object[] results = this.Invoke("ExchangeGet", new object[] {
                        Token,
                        Exchange});
            return ((RESPONSE)(results[0]));
        }
        
        /// <remarks/>
        public void ExchangeGetAsync(string Token, string Exchange) {
            this.ExchangeGetAsync(Token, Exchange, null);
        }
        
        /// <remarks/>
        public void ExchangeGetAsync(string Token, string Exchange, object userState) {
            if ((this.ExchangeGetOperationCompleted == null)) {
                this.ExchangeGetOperationCompleted = new System.Threading.SendOrPostCallback(this.OnExchangeGetOperationCompleted);
            }
            this.InvokeAsync("ExchangeGet", new object[] {
                        Token,
                        Exchange}, this.ExchangeGetOperationCompleted, userState);
        }
        
        private void OnExchangeGetOperationCompleted(object arg) {
            if ((this.ExchangeGetCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ExchangeGetCompleted(this, new ExchangeGetCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://ws.eoddata.com/Data/SymbolList", RequestNamespace="http://ws.eoddata.com/Data", ResponseNamespace="http://ws.eoddata.com/Data", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public RESPONSE SymbolList(string Token, string Exchange) {
            object[] results = this.Invoke("SymbolList", new object[] {
                        Token,
                        Exchange});
            return ((RESPONSE)(results[0]));
        }
        
        /// <remarks/>
        public void SymbolListAsync(string Token, string Exchange) {
            this.SymbolListAsync(Token, Exchange, null);
        }
        
        /// <remarks/>
        public void SymbolListAsync(string Token, string Exchange, object userState) {
            if ((this.SymbolListOperationCompleted == null)) {
                this.SymbolListOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSymbolListOperationCompleted);
            }
            this.InvokeAsync("SymbolList", new object[] {
                        Token,
                        Exchange}, this.SymbolListOperationCompleted, userState);
        }
        
        private void OnSymbolListOperationCompleted(object arg) {
            if ((this.SymbolListCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SymbolListCompleted(this, new SymbolListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://ws.eoddata.com/Data/SymbolList2", RequestNamespace="http://ws.eoddata.com/Data", ResponseNamespace="http://ws.eoddata.com/Data", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public RESPONSE SymbolList2(string Token, string Exchange) {
            object[] results = this.Invoke("SymbolList2", new object[] {
                        Token,
                        Exchange});
            return ((RESPONSE)(results[0]));
        }
        
        /// <remarks/>
        public void SymbolList2Async(string Token, string Exchange) {
            this.SymbolList2Async(Token, Exchange, null);
        }
        
        /// <remarks/>
        public void SymbolList2Async(string Token, string Exchange, object userState) {
            if ((this.SymbolList2OperationCompleted == null)) {
                this.SymbolList2OperationCompleted = new System.Threading.SendOrPostCallback(this.OnSymbolList2OperationCompleted);
            }
            this.InvokeAsync("SymbolList2", new object[] {
                        Token,
                        Exchange}, this.SymbolList2OperationCompleted, userState);
        }
        
        private void OnSymbolList2OperationCompleted(object arg) {
            if ((this.SymbolList2Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SymbolList2Completed(this, new SymbolList2CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://ws.eoddata.com/Data/QuoteGet", RequestNamespace="http://ws.eoddata.com/Data", ResponseNamespace="http://ws.eoddata.com/Data", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public RESPONSE QuoteGet(string Token, string Exchange, string Symbol) {
            object[] results = this.Invoke("QuoteGet", new object[] {
                        Token,
                        Exchange,
                        Symbol});
            return ((RESPONSE)(results[0]));
        }
        
        /// <remarks/>
        public void QuoteGetAsync(string Token, string Exchange, string Symbol) {
            this.QuoteGetAsync(Token, Exchange, Symbol, null);
        }
        
        /// <remarks/>
        public void QuoteGetAsync(string Token, string Exchange, string Symbol, object userState) {
            if ((this.QuoteGetOperationCompleted == null)) {
                this.QuoteGetOperationCompleted = new System.Threading.SendOrPostCallback(this.OnQuoteGetOperationCompleted);
            }
            this.InvokeAsync("QuoteGet", new object[] {
                        Token,
                        Exchange,
                        Symbol}, this.QuoteGetOperationCompleted, userState);
        }
        
        private void OnQuoteGetOperationCompleted(object arg) {
            if ((this.QuoteGetCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.QuoteGetCompleted(this, new QuoteGetCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://ws.eoddata.com/Data/QuoteList2", RequestNamespace="http://ws.eoddata.com/Data", ResponseNamespace="http://ws.eoddata.com/Data", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public RESPONSE QuoteList2(string Token, string Exchange, string Symbols) {
            object[] results = this.Invoke("QuoteList2", new object[] {
                        Token,
                        Exchange,
                        Symbols});
            return ((RESPONSE)(results[0]));
        }
        
        /// <remarks/>
        public void QuoteList2Async(string Token, string Exchange, string Symbols) {
            this.QuoteList2Async(Token, Exchange, Symbols, null);
        }
        
        /// <remarks/>
        public void QuoteList2Async(string Token, string Exchange, string Symbols, object userState) {
            if ((this.QuoteList2OperationCompleted == null)) {
                this.QuoteList2OperationCompleted = new System.Threading.SendOrPostCallback(this.OnQuoteList2OperationCompleted);
            }
            this.InvokeAsync("QuoteList2", new object[] {
                        Token,
                        Exchange,
                        Symbols}, this.QuoteList2OperationCompleted, userState);
        }
        
        private void OnQuoteList2OperationCompleted(object arg) {
            if ((this.QuoteList2Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.QuoteList2Completed(this, new QuoteList2CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://ws.eoddata.com/Data/SymbolGet", RequestNamespace="http://ws.eoddata.com/Data", ResponseNamespace="http://ws.eoddata.com/Data", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public RESPONSE SymbolGet(string Token, string Exchange, string Symbol) {
            object[] results = this.Invoke("SymbolGet", new object[] {
                        Token,
                        Exchange,
                        Symbol});
            return ((RESPONSE)(results[0]));
        }
        
        /// <remarks/>
        public void SymbolGetAsync(string Token, string Exchange, string Symbol) {
            this.SymbolGetAsync(Token, Exchange, Symbol, null);
        }
        
        /// <remarks/>
        public void SymbolGetAsync(string Token, string Exchange, string Symbol, object userState) {
            if ((this.SymbolGetOperationCompleted == null)) {
                this.SymbolGetOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSymbolGetOperationCompleted);
            }
            this.InvokeAsync("SymbolGet", new object[] {
                        Token,
                        Exchange,
                        Symbol}, this.SymbolGetOperationCompleted, userState);
        }
        
        private void OnSymbolGetOperationCompleted(object arg) {
            if ((this.SymbolGetCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SymbolGetCompleted(this, new SymbolGetCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://ws.eoddata.com/Data/QuoteList", RequestNamespace="http://ws.eoddata.com/Data", ResponseNamespace="http://ws.eoddata.com/Data", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public RESPONSE QuoteList(string Token, string Exchange) {
            object[] results = this.Invoke("QuoteList", new object[] {
                        Token,
                        Exchange});
            return ((RESPONSE)(results[0]));
        }
        
        /// <remarks/>
        public void QuoteListAsync(string Token, string Exchange) {
            this.QuoteListAsync(Token, Exchange, null);
        }
        
        /// <remarks/>
        public void QuoteListAsync(string Token, string Exchange, object userState) {
            if ((this.QuoteListOperationCompleted == null)) {
                this.QuoteListOperationCompleted = new System.Threading.SendOrPostCallback(this.OnQuoteListOperationCompleted);
            }
            this.InvokeAsync("QuoteList", new object[] {
                        Token,
                        Exchange}, this.QuoteListOperationCompleted, userState);
        }
        
        private void OnQuoteListOperationCompleted(object arg) {
            if ((this.QuoteListCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.QuoteListCompleted(this, new QuoteListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://ws.eoddata.com/Data/FundamentalList", RequestNamespace="http://ws.eoddata.com/Data", ResponseNamespace="http://ws.eoddata.com/Data", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public RESPONSE FundamentalList(string Token, string Exchange) {
            object[] results = this.Invoke("FundamentalList", new object[] {
                        Token,
                        Exchange});
            return ((RESPONSE)(results[0]));
        }
        
        /// <remarks/>
        public void FundamentalListAsync(string Token, string Exchange) {
            this.FundamentalListAsync(Token, Exchange, null);
        }
        
        /// <remarks/>
        public void FundamentalListAsync(string Token, string Exchange, object userState) {
            if ((this.FundamentalListOperationCompleted == null)) {
                this.FundamentalListOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFundamentalListOperationCompleted);
            }
            this.InvokeAsync("FundamentalList", new object[] {
                        Token,
                        Exchange}, this.FundamentalListOperationCompleted, userState);
        }
        
        private void OnFundamentalListOperationCompleted(object arg) {
            if ((this.FundamentalListCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FundamentalListCompleted(this, new FundamentalListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://ws.eoddata.com/Data/TechnicalList", RequestNamespace="http://ws.eoddata.com/Data", ResponseNamespace="http://ws.eoddata.com/Data", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public RESPONSE TechnicalList(string Token, string Exchange) {
            object[] results = this.Invoke("TechnicalList", new object[] {
                        Token,
                        Exchange});
            return ((RESPONSE)(results[0]));
        }
        
        /// <remarks/>
        public void TechnicalListAsync(string Token, string Exchange) {
            this.TechnicalListAsync(Token, Exchange, null);
        }
        
        /// <remarks/>
        public void TechnicalListAsync(string Token, string Exchange, object userState) {
            if ((this.TechnicalListOperationCompleted == null)) {
                this.TechnicalListOperationCompleted = new System.Threading.SendOrPostCallback(this.OnTechnicalListOperationCompleted);
            }
            this.InvokeAsync("TechnicalList", new object[] {
                        Token,
                        Exchange}, this.TechnicalListOperationCompleted, userState);
        }
        
        private void OnTechnicalListOperationCompleted(object arg) {
            if ((this.TechnicalListCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.TechnicalListCompleted(this, new TechnicalListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://ws.eoddata.com/Data/QuoteListByDate", RequestNamespace="http://ws.eoddata.com/Data", ResponseNamespace="http://ws.eoddata.com/Data", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public RESPONSE QuoteListByDate(string Token, string Exchange, string QuoteDate) {
            object[] results = this.Invoke("QuoteListByDate", new object[] {
                        Token,
                        Exchange,
                        QuoteDate});
            return ((RESPONSE)(results[0]));
        }
        
        /// <remarks/>
        public void QuoteListByDateAsync(string Token, string Exchange, string QuoteDate) {
            this.QuoteListByDateAsync(Token, Exchange, QuoteDate, null);
        }
        
        /// <remarks/>
        public void QuoteListByDateAsync(string Token, string Exchange, string QuoteDate, object userState) {
            if ((this.QuoteListByDateOperationCompleted == null)) {
                this.QuoteListByDateOperationCompleted = new System.Threading.SendOrPostCallback(this.OnQuoteListByDateOperationCompleted);
            }
            this.InvokeAsync("QuoteListByDate", new object[] {
                        Token,
                        Exchange,
                        QuoteDate}, this.QuoteListByDateOperationCompleted, userState);
        }
        
        private void OnQuoteListByDateOperationCompleted(object arg) {
            if ((this.QuoteListByDateCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.QuoteListByDateCompleted(this, new QuoteListByDateCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://ws.eoddata.com/Data/QuoteListByDate2", RequestNamespace="http://ws.eoddata.com/Data", ResponseNamespace="http://ws.eoddata.com/Data", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public RESPONSE QuoteListByDate2(string Token, string Exchange, string QuoteDate) {
            object[] results = this.Invoke("QuoteListByDate2", new object[] {
                        Token,
                        Exchange,
                        QuoteDate});
            return ((RESPONSE)(results[0]));
        }
        
        /// <remarks/>
        public void QuoteListByDate2Async(string Token, string Exchange, string QuoteDate) {
            this.QuoteListByDate2Async(Token, Exchange, QuoteDate, null);
        }
        
        /// <remarks/>
        public void QuoteListByDate2Async(string Token, string Exchange, string QuoteDate, object userState) {
            if ((this.QuoteListByDate2OperationCompleted == null)) {
                this.QuoteListByDate2OperationCompleted = new System.Threading.SendOrPostCallback(this.OnQuoteListByDate2OperationCompleted);
            }
            this.InvokeAsync("QuoteListByDate2", new object[] {
                        Token,
                        Exchange,
                        QuoteDate}, this.QuoteListByDate2OperationCompleted, userState);
        }
        
        private void OnQuoteListByDate2OperationCompleted(object arg) {
            if ((this.QuoteListByDate2Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.QuoteListByDate2Completed(this, new QuoteListByDate2CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://ws.eoddata.com/Data/SymbolHistory", RequestNamespace="http://ws.eoddata.com/Data", ResponseNamespace="http://ws.eoddata.com/Data", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public RESPONSE SymbolHistory(string Token, string Exchange, string Symbol, string StartDate) {
            object[] results = this.Invoke("SymbolHistory", new object[] {
                        Token,
                        Exchange,
                        Symbol,
                        StartDate});
            return ((RESPONSE)(results[0]));
        }
        
        /// <remarks/>
        public void SymbolHistoryAsync(string Token, string Exchange, string Symbol, string StartDate) {
            this.SymbolHistoryAsync(Token, Exchange, Symbol, StartDate, null);
        }
        
        /// <remarks/>
        public void SymbolHistoryAsync(string Token, string Exchange, string Symbol, string StartDate, object userState) {
            if ((this.SymbolHistoryOperationCompleted == null)) {
                this.SymbolHistoryOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSymbolHistoryOperationCompleted);
            }
            this.InvokeAsync("SymbolHistory", new object[] {
                        Token,
                        Exchange,
                        Symbol,
                        StartDate}, this.SymbolHistoryOperationCompleted, userState);
        }
        
        private void OnSymbolHistoryOperationCompleted(object arg) {
            if ((this.SymbolHistoryCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SymbolHistoryCompleted(this, new SymbolHistoryCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://ws.eoddata.com/Data/Top10Gains", RequestNamespace="http://ws.eoddata.com/Data", ResponseNamespace="http://ws.eoddata.com/Data", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public RESPONSE Top10Gains(string Token, string Exchange) {
            object[] results = this.Invoke("Top10Gains", new object[] {
                        Token,
                        Exchange});
            return ((RESPONSE)(results[0]));
        }
        
        /// <remarks/>
        public void Top10GainsAsync(string Token, string Exchange) {
            this.Top10GainsAsync(Token, Exchange, null);
        }
        
        /// <remarks/>
        public void Top10GainsAsync(string Token, string Exchange, object userState) {
            if ((this.Top10GainsOperationCompleted == null)) {
                this.Top10GainsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnTop10GainsOperationCompleted);
            }
            this.InvokeAsync("Top10Gains", new object[] {
                        Token,
                        Exchange}, this.Top10GainsOperationCompleted, userState);
        }
        
        private void OnTop10GainsOperationCompleted(object arg) {
            if ((this.Top10GainsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Top10GainsCompleted(this, new Top10GainsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://ws.eoddata.com/Data/Top10Losses", RequestNamespace="http://ws.eoddata.com/Data", ResponseNamespace="http://ws.eoddata.com/Data", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public RESPONSE Top10Losses(string Token, string Exchange) {
            object[] results = this.Invoke("Top10Losses", new object[] {
                        Token,
                        Exchange});
            return ((RESPONSE)(results[0]));
        }
        
        /// <remarks/>
        public void Top10LossesAsync(string Token, string Exchange) {
            this.Top10LossesAsync(Token, Exchange, null);
        }
        
        /// <remarks/>
        public void Top10LossesAsync(string Token, string Exchange, object userState) {
            if ((this.Top10LossesOperationCompleted == null)) {
                this.Top10LossesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnTop10LossesOperationCompleted);
            }
            this.InvokeAsync("Top10Losses", new object[] {
                        Token,
                        Exchange}, this.Top10LossesOperationCompleted, userState);
        }
        
        private void OnTop10LossesOperationCompleted(object arg) {
            if ((this.Top10LossesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Top10LossesCompleted(this, new Top10LossesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://ws.eoddata.com/Data/SymbolChart", RequestNamespace="http://ws.eoddata.com/Data", ResponseNamespace="http://ws.eoddata.com/Data", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public RESPONSE SymbolChart(string Token, string Exchange, string Symbol) {
            object[] results = this.Invoke("SymbolChart", new object[] {
                        Token,
                        Exchange,
                        Symbol});
            return ((RESPONSE)(results[0]));
        }
        
        /// <remarks/>
        public void SymbolChartAsync(string Token, string Exchange, string Symbol) {
            this.SymbolChartAsync(Token, Exchange, Symbol, null);
        }
        
        /// <remarks/>
        public void SymbolChartAsync(string Token, string Exchange, string Symbol, object userState) {
            if ((this.SymbolChartOperationCompleted == null)) {
                this.SymbolChartOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSymbolChartOperationCompleted);
            }
            this.InvokeAsync("SymbolChart", new object[] {
                        Token,
                        Exchange,
                        Symbol}, this.SymbolChartOperationCompleted, userState);
        }
        
        private void OnSymbolChartOperationCompleted(object arg) {
            if ((this.SymbolChartCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SymbolChartCompleted(this, new SymbolChartCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://ws.eoddata.com/Data/ExchangeMonths", RequestNamespace="http://ws.eoddata.com/Data", ResponseNamespace="http://ws.eoddata.com/Data", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public RESPONSE ExchangeMonths(string Token, string Exchange) {
            object[] results = this.Invoke("ExchangeMonths", new object[] {
                        Token,
                        Exchange});
            return ((RESPONSE)(results[0]));
        }
        
        /// <remarks/>
        public void ExchangeMonthsAsync(string Token, string Exchange) {
            this.ExchangeMonthsAsync(Token, Exchange, null);
        }
        
        /// <remarks/>
        public void ExchangeMonthsAsync(string Token, string Exchange, object userState) {
            if ((this.ExchangeMonthsOperationCompleted == null)) {
                this.ExchangeMonthsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnExchangeMonthsOperationCompleted);
            }
            this.InvokeAsync("ExchangeMonths", new object[] {
                        Token,
                        Exchange}, this.ExchangeMonthsOperationCompleted, userState);
        }
        
        private void OnExchangeMonthsOperationCompleted(object arg) {
            if ((this.ExchangeMonthsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ExchangeMonthsCompleted(this, new ExchangeMonthsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://ws.eoddata.com/Data/SplitListByExchange", RequestNamespace="http://ws.eoddata.com/Data", ResponseNamespace="http://ws.eoddata.com/Data", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public RESPONSE SplitListByExchange(string Token, string Exchange) {
            object[] results = this.Invoke("SplitListByExchange", new object[] {
                        Token,
                        Exchange});
            return ((RESPONSE)(results[0]));
        }
        
        /// <remarks/>
        public void SplitListByExchangeAsync(string Token, string Exchange) {
            this.SplitListByExchangeAsync(Token, Exchange, null);
        }
        
        /// <remarks/>
        public void SplitListByExchangeAsync(string Token, string Exchange, object userState) {
            if ((this.SplitListByExchangeOperationCompleted == null)) {
                this.SplitListByExchangeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSplitListByExchangeOperationCompleted);
            }
            this.InvokeAsync("SplitListByExchange", new object[] {
                        Token,
                        Exchange}, this.SplitListByExchangeOperationCompleted, userState);
        }
        
        private void OnSplitListByExchangeOperationCompleted(object arg) {
            if ((this.SplitListByExchangeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SplitListByExchangeCompleted(this, new SplitListByExchangeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://ws.eoddata.com/Data/SplitListBySymbol", RequestNamespace="http://ws.eoddata.com/Data", ResponseNamespace="http://ws.eoddata.com/Data", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public RESPONSE SplitListBySymbol(string Token, string Exchange, string Symbol) {
            object[] results = this.Invoke("SplitListBySymbol", new object[] {
                        Token,
                        Exchange,
                        Symbol});
            return ((RESPONSE)(results[0]));
        }
        
        /// <remarks/>
        public void SplitListBySymbolAsync(string Token, string Exchange, string Symbol) {
            this.SplitListBySymbolAsync(Token, Exchange, Symbol, null);
        }
        
        /// <remarks/>
        public void SplitListBySymbolAsync(string Token, string Exchange, string Symbol, object userState) {
            if ((this.SplitListBySymbolOperationCompleted == null)) {
                this.SplitListBySymbolOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSplitListBySymbolOperationCompleted);
            }
            this.InvokeAsync("SplitListBySymbol", new object[] {
                        Token,
                        Exchange,
                        Symbol}, this.SplitListBySymbolOperationCompleted, userState);
        }
        
        private void OnSplitListBySymbolOperationCompleted(object arg) {
            if ((this.SplitListBySymbolCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SplitListBySymbolCompleted(this, new SplitListBySymbolCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://ws.eoddata.com/Data/CountryList", RequestNamespace="http://ws.eoddata.com/Data", ResponseNamespace="http://ws.eoddata.com/Data", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public RESPONSE CountryList(string Token) {
            object[] results = this.Invoke("CountryList", new object[] {
                        Token});
            return ((RESPONSE)(results[0]));
        }
        
        /// <remarks/>
        public void CountryListAsync(string Token) {
            this.CountryListAsync(Token, null);
        }
        
        /// <remarks/>
        public void CountryListAsync(string Token, object userState) {
            if ((this.CountryListOperationCompleted == null)) {
                this.CountryListOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCountryListOperationCompleted);
            }
            this.InvokeAsync("CountryList", new object[] {
                        Token}, this.CountryListOperationCompleted, userState);
        }
        
        private void OnCountryListOperationCompleted(object arg) {
            if ((this.CountryListCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CountryListCompleted(this, new CountryListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://ws.eoddata.com/Data/SymbolHistoryPeriod", RequestNamespace="http://ws.eoddata.com/Data", ResponseNamespace="http://ws.eoddata.com/Data", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public RESPONSE SymbolHistoryPeriod(string Token, string Exchange, string Symbol, string Date, string Period) {
            object[] results = this.Invoke("SymbolHistoryPeriod", new object[] {
                        Token,
                        Exchange,
                        Symbol,
                        Date,
                        Period});
            return ((RESPONSE)(results[0]));
        }
        
        /// <remarks/>
        public void SymbolHistoryPeriodAsync(string Token, string Exchange, string Symbol, string Date, string Period) {
            this.SymbolHistoryPeriodAsync(Token, Exchange, Symbol, Date, Period, null);
        }
        
        /// <remarks/>
        public void SymbolHistoryPeriodAsync(string Token, string Exchange, string Symbol, string Date, string Period, object userState) {
            if ((this.SymbolHistoryPeriodOperationCompleted == null)) {
                this.SymbolHistoryPeriodOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSymbolHistoryPeriodOperationCompleted);
            }
            this.InvokeAsync("SymbolHistoryPeriod", new object[] {
                        Token,
                        Exchange,
                        Symbol,
                        Date,
                        Period}, this.SymbolHistoryPeriodOperationCompleted, userState);
        }
        
        private void OnSymbolHistoryPeriodOperationCompleted(object arg) {
            if ((this.SymbolHistoryPeriodCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SymbolHistoryPeriodCompleted(this, new SymbolHistoryPeriodCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://ws.eoddata.com/Data/SymbolHistoryPeriodByDateRange", RequestNamespace="http://ws.eoddata.com/Data", ResponseNamespace="http://ws.eoddata.com/Data", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public RESPONSE SymbolHistoryPeriodByDateRange(string Token, string Exchange, string Symbol, string StartDate, string EndDate, string Period) {
            object[] results = this.Invoke("SymbolHistoryPeriodByDateRange", new object[] {
                        Token,
                        Exchange,
                        Symbol,
                        StartDate,
                        EndDate,
                        Period});
            return ((RESPONSE)(results[0]));
        }
        
        /// <remarks/>
        public void SymbolHistoryPeriodByDateRangeAsync(string Token, string Exchange, string Symbol, string StartDate, string EndDate, string Period) {
            this.SymbolHistoryPeriodByDateRangeAsync(Token, Exchange, Symbol, StartDate, EndDate, Period, null);
        }
        
        /// <remarks/>
        public void SymbolHistoryPeriodByDateRangeAsync(string Token, string Exchange, string Symbol, string StartDate, string EndDate, string Period, object userState) {
            if ((this.SymbolHistoryPeriodByDateRangeOperationCompleted == null)) {
                this.SymbolHistoryPeriodByDateRangeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSymbolHistoryPeriodByDateRangeOperationCompleted);
            }
            this.InvokeAsync("SymbolHistoryPeriodByDateRange", new object[] {
                        Token,
                        Exchange,
                        Symbol,
                        StartDate,
                        EndDate,
                        Period}, this.SymbolHistoryPeriodByDateRangeOperationCompleted, userState);
        }
        
        private void OnSymbolHistoryPeriodByDateRangeOperationCompleted(object arg) {
            if ((this.SymbolHistoryPeriodByDateRangeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SymbolHistoryPeriodByDateRangeCompleted(this, new SymbolHistoryPeriodByDateRangeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://ws.eoddata.com/Data/QuoteListByDatePeriod", RequestNamespace="http://ws.eoddata.com/Data", ResponseNamespace="http://ws.eoddata.com/Data", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public RESPONSE QuoteListByDatePeriod(string Token, string Exchange, string QuoteDate, string Period) {
            object[] results = this.Invoke("QuoteListByDatePeriod", new object[] {
                        Token,
                        Exchange,
                        QuoteDate,
                        Period});
            return ((RESPONSE)(results[0]));
        }
        
        /// <remarks/>
        public void QuoteListByDatePeriodAsync(string Token, string Exchange, string QuoteDate, string Period) {
            this.QuoteListByDatePeriodAsync(Token, Exchange, QuoteDate, Period, null);
        }
        
        /// <remarks/>
        public void QuoteListByDatePeriodAsync(string Token, string Exchange, string QuoteDate, string Period, object userState) {
            if ((this.QuoteListByDatePeriodOperationCompleted == null)) {
                this.QuoteListByDatePeriodOperationCompleted = new System.Threading.SendOrPostCallback(this.OnQuoteListByDatePeriodOperationCompleted);
            }
            this.InvokeAsync("QuoteListByDatePeriod", new object[] {
                        Token,
                        Exchange,
                        QuoteDate,
                        Period}, this.QuoteListByDatePeriodOperationCompleted, userState);
        }
        
        private void OnQuoteListByDatePeriodOperationCompleted(object arg) {
            if ((this.QuoteListByDatePeriodCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.QuoteListByDatePeriodCompleted(this, new QuoteListByDatePeriodCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://ws.eoddata.com/Data/QuoteListByDatePeriod2", RequestNamespace="http://ws.eoddata.com/Data", ResponseNamespace="http://ws.eoddata.com/Data", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public RESPONSE QuoteListByDatePeriod2(string Token, string Exchange, string QuoteDate, string Period) {
            object[] results = this.Invoke("QuoteListByDatePeriod2", new object[] {
                        Token,
                        Exchange,
                        QuoteDate,
                        Period});
            return ((RESPONSE)(results[0]));
        }
        
        /// <remarks/>
        public void QuoteListByDatePeriod2Async(string Token, string Exchange, string QuoteDate, string Period) {
            this.QuoteListByDatePeriod2Async(Token, Exchange, QuoteDate, Period, null);
        }
        
        /// <remarks/>
        public void QuoteListByDatePeriod2Async(string Token, string Exchange, string QuoteDate, string Period, object userState) {
            if ((this.QuoteListByDatePeriod2OperationCompleted == null)) {
                this.QuoteListByDatePeriod2OperationCompleted = new System.Threading.SendOrPostCallback(this.OnQuoteListByDatePeriod2OperationCompleted);
            }
            this.InvokeAsync("QuoteListByDatePeriod2", new object[] {
                        Token,
                        Exchange,
                        QuoteDate,
                        Period}, this.QuoteListByDatePeriod2OperationCompleted, userState);
        }
        
        private void OnQuoteListByDatePeriod2OperationCompleted(object arg) {
            if ((this.QuoteListByDatePeriod2Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.QuoteListByDatePeriod2Completed(this, new QuoteListByDatePeriod2CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://ws.eoddata.com/Data/SymbolChangesByExchange", RequestNamespace="http://ws.eoddata.com/Data", ResponseNamespace="http://ws.eoddata.com/Data", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public RESPONSE SymbolChangesByExchange(string Token, string Exchange) {
            object[] results = this.Invoke("SymbolChangesByExchange", new object[] {
                        Token,
                        Exchange});
            return ((RESPONSE)(results[0]));
        }
        
        /// <remarks/>
        public void SymbolChangesByExchangeAsync(string Token, string Exchange) {
            this.SymbolChangesByExchangeAsync(Token, Exchange, null);
        }
        
        /// <remarks/>
        public void SymbolChangesByExchangeAsync(string Token, string Exchange, object userState) {
            if ((this.SymbolChangesByExchangeOperationCompleted == null)) {
                this.SymbolChangesByExchangeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSymbolChangesByExchangeOperationCompleted);
            }
            this.InvokeAsync("SymbolChangesByExchange", new object[] {
                        Token,
                        Exchange}, this.SymbolChangesByExchangeOperationCompleted, userState);
        }
        
        private void OnSymbolChangesByExchangeOperationCompleted(object arg) {
            if ((this.SymbolChangesByExchangeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SymbolChangesByExchangeCompleted(this, new SymbolChangesByExchangeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://ws.eoddata.com/Data/DataClientLatestVersion", RequestNamespace="http://ws.eoddata.com/Data", ResponseNamespace="http://ws.eoddata.com/Data", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public RESPONSE DataClientLatestVersion(string Token) {
            object[] results = this.Invoke("DataClientLatestVersion", new object[] {
                        Token});
            return ((RESPONSE)(results[0]));
        }
        
        /// <remarks/>
        public void DataClientLatestVersionAsync(string Token) {
            this.DataClientLatestVersionAsync(Token, null);
        }
        
        /// <remarks/>
        public void DataClientLatestVersionAsync(string Token, object userState) {
            if ((this.DataClientLatestVersionOperationCompleted == null)) {
                this.DataClientLatestVersionOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDataClientLatestVersionOperationCompleted);
            }
            this.InvokeAsync("DataClientLatestVersion", new object[] {
                        Token}, this.DataClientLatestVersionOperationCompleted, userState);
        }
        
        private void OnDataClientLatestVersionOperationCompleted(object arg) {
            if ((this.DataClientLatestVersionCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DataClientLatestVersionCompleted(this, new DataClientLatestVersionCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://ws.eoddata.com/Data/DataFormats", RequestNamespace="http://ws.eoddata.com/Data", ResponseNamespace="http://ws.eoddata.com/Data", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public RESPONSE DataFormats(string Token) {
            object[] results = this.Invoke("DataFormats", new object[] {
                        Token});
            return ((RESPONSE)(results[0]));
        }
        
        /// <remarks/>
        public void DataFormatsAsync(string Token) {
            this.DataFormatsAsync(Token, null);
        }
        
        /// <remarks/>
        public void DataFormatsAsync(string Token, object userState) {
            if ((this.DataFormatsOperationCompleted == null)) {
                this.DataFormatsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDataFormatsOperationCompleted);
            }
            this.InvokeAsync("DataFormats", new object[] {
                        Token}, this.DataFormatsOperationCompleted, userState);
        }
        
        private void OnDataFormatsOperationCompleted(object arg) {
            if ((this.DataFormatsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DataFormatsCompleted(this, new DataFormatsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://ws.eoddata.com/Data/UpdateDataFormat", RequestNamespace="http://ws.eoddata.com/Data", ResponseNamespace="http://ws.eoddata.com/Data", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public RESPONSE UpdateDataFormat(string Token, string DataFormat, bool IncludeHeader, bool IncludeSuffix) {
            object[] results = this.Invoke("UpdateDataFormat", new object[] {
                        Token,
                        DataFormat,
                        IncludeHeader,
                        IncludeSuffix});
            return ((RESPONSE)(results[0]));
        }
        
        /// <remarks/>
        public void UpdateDataFormatAsync(string Token, string DataFormat, bool IncludeHeader, bool IncludeSuffix) {
            this.UpdateDataFormatAsync(Token, DataFormat, IncludeHeader, IncludeSuffix, null);
        }
        
        /// <remarks/>
        public void UpdateDataFormatAsync(string Token, string DataFormat, bool IncludeHeader, bool IncludeSuffix, object userState) {
            if ((this.UpdateDataFormatOperationCompleted == null)) {
                this.UpdateDataFormatOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateDataFormatOperationCompleted);
            }
            this.InvokeAsync("UpdateDataFormat", new object[] {
                        Token,
                        DataFormat,
                        IncludeHeader,
                        IncludeSuffix}, this.UpdateDataFormatOperationCompleted, userState);
        }
        
        private void OnUpdateDataFormatOperationCompleted(object arg) {
            if ((this.UpdateDataFormatCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateDataFormatCompleted(this, new UpdateDataFormatCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://ws.eoddata.com/Data/ValidateAccess", RequestNamespace="http://ws.eoddata.com/Data", ResponseNamespace="http://ws.eoddata.com/Data", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public RESPONSE ValidateAccess(string Token, string Exchange, string QuoteDate, string Period) {
            object[] results = this.Invoke("ValidateAccess", new object[] {
                        Token,
                        Exchange,
                        QuoteDate,
                        Period});
            return ((RESPONSE)(results[0]));
        }
        
        /// <remarks/>
        public void ValidateAccessAsync(string Token, string Exchange, string QuoteDate, string Period) {
            this.ValidateAccessAsync(Token, Exchange, QuoteDate, Period, null);
        }
        
        /// <remarks/>
        public void ValidateAccessAsync(string Token, string Exchange, string QuoteDate, string Period, object userState) {
            if ((this.ValidateAccessOperationCompleted == null)) {
                this.ValidateAccessOperationCompleted = new System.Threading.SendOrPostCallback(this.OnValidateAccessOperationCompleted);
            }
            this.InvokeAsync("ValidateAccess", new object[] {
                        Token,
                        Exchange,
                        QuoteDate,
                        Period}, this.ValidateAccessOperationCompleted, userState);
        }
        
        private void OnValidateAccessOperationCompleted(object arg) {
            if ((this.ValidateAccessCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ValidateAccessCompleted(this, new ValidateAccessCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.33440")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://ws.eoddata.com/Data")]
    public partial class LOGINRESPONSE {
        
        private string messageField;
        
        private string tokenField;
        
        private string dataFormatField;
        
        private bool headerField;
        
        private bool suffixField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string Message {
            get {
                return this.messageField;
            }
            set {
                this.messageField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string Token {
            get {
                return this.tokenField;
            }
            set {
                this.tokenField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string DataFormat {
            get {
                return this.dataFormatField;
            }
            set {
                this.dataFormatField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public bool Header {
            get {
                return this.headerField;
            }
            set {
                this.headerField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public bool Suffix {
            get {
                return this.suffixField;
            }
            set {
                this.suffixField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.33440")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://ws.eoddata.com/Data")]
    public partial class DATAFORMAT_COLUMN {
        
        private int sortOrderField;
        
        private string codeField;
        
        private string dataFormatField;
        
        private string columnCodeField;
        
        private string columnNameField;
        
        private int columnTypeIdField;
        
        private string columnTypeField;
        
        private string headerField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public int SortOrder {
            get {
                return this.sortOrderField;
            }
            set {
                this.sortOrderField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string Code {
            get {
                return this.codeField;
            }
            set {
                this.codeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string DataFormat {
            get {
                return this.dataFormatField;
            }
            set {
                this.dataFormatField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string ColumnCode {
            get {
                return this.columnCodeField;
            }
            set {
                this.columnCodeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string ColumnName {
            get {
                return this.columnNameField;
            }
            set {
                this.columnNameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public int ColumnTypeId {
            get {
                return this.columnTypeIdField;
            }
            set {
                this.columnTypeIdField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string ColumnType {
            get {
                return this.columnTypeField;
            }
            set {
                this.columnTypeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string Header {
            get {
                return this.headerField;
            }
            set {
                this.headerField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.33440")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://ws.eoddata.com/Data")]
    public partial class DATAFORMAT {
        
        private DATAFORMAT_COLUMN[] cOLUMNSField;
        
        private string codeField;
        
        private string nameField;
        
        private string headerField;
        
        private string dateFormatField;
        
        private string extensionField;
        
        private bool includeSuffixField;
        
        private bool tabColumnSeperatorField;
        
        private string columnSeperatorField;
        
        private string textQualifierField;
        
        private string filenamePrefixField;
        
        private bool filenameExchangeCodeField;
        
        private bool filenameDateField;
        
        private bool includeHeaderRowField;
        
        private string hourFormatField;
        
        private string dateTimeSeperatorField;
        
        private string exchangeFilenameFormatDateField;
        
        private string exchangeFilenameFormatDateRangeField;
        
        private string symbolFilenameFormatDateField;
        
        private string symbolFilenameFormatDateRangeField;
        
        /// <remarks/>
        public DATAFORMAT_COLUMN[] COLUMNS {
            get {
                return this.cOLUMNSField;
            }
            set {
                this.cOLUMNSField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string Code {
            get {
                return this.codeField;
            }
            set {
                this.codeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string Name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string Header {
            get {
                return this.headerField;
            }
            set {
                this.headerField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string DateFormat {
            get {
                return this.dateFormatField;
            }
            set {
                this.dateFormatField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string Extension {
            get {
                return this.extensionField;
            }
            set {
                this.extensionField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public bool IncludeSuffix {
            get {
                return this.includeSuffixField;
            }
            set {
                this.includeSuffixField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public bool TabColumnSeperator {
            get {
                return this.tabColumnSeperatorField;
            }
            set {
                this.tabColumnSeperatorField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string ColumnSeperator {
            get {
                return this.columnSeperatorField;
            }
            set {
                this.columnSeperatorField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string TextQualifier {
            get {
                return this.textQualifierField;
            }
            set {
                this.textQualifierField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string FilenamePrefix {
            get {
                return this.filenamePrefixField;
            }
            set {
                this.filenamePrefixField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public bool FilenameExchangeCode {
            get {
                return this.filenameExchangeCodeField;
            }
            set {
                this.filenameExchangeCodeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public bool FilenameDate {
            get {
                return this.filenameDateField;
            }
            set {
                this.filenameDateField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public bool IncludeHeaderRow {
            get {
                return this.includeHeaderRowField;
            }
            set {
                this.includeHeaderRowField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string HourFormat {
            get {
                return this.hourFormatField;
            }
            set {
                this.hourFormatField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string DateTimeSeperator {
            get {
                return this.dateTimeSeperatorField;
            }
            set {
                this.dateTimeSeperatorField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string ExchangeFilenameFormatDate {
            get {
                return this.exchangeFilenameFormatDateField;
            }
            set {
                this.exchangeFilenameFormatDateField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string ExchangeFilenameFormatDateRange {
            get {
                return this.exchangeFilenameFormatDateRangeField;
            }
            set {
                this.exchangeFilenameFormatDateRangeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string SymbolFilenameFormatDate {
            get {
                return this.symbolFilenameFormatDateField;
            }
            set {
                this.symbolFilenameFormatDateField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string SymbolFilenameFormatDateRange {
            get {
                return this.symbolFilenameFormatDateRangeField;
            }
            set {
                this.symbolFilenameFormatDateRangeField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.33440")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://ws.eoddata.com/Data")]
    public partial class SYMBOLCHANGE {
        
        private System.DateTime dateTimeField;
        
        private string oldSymbolField;
        
        private string newSymbolField;
        
        private string exchangeCodeField;
        
        private string newExchangeCodeField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public System.DateTime DateTime {
            get {
                return this.dateTimeField;
            }
            set {
                this.dateTimeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string OldSymbol {
            get {
                return this.oldSymbolField;
            }
            set {
                this.oldSymbolField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string NewSymbol {
            get {
                return this.newSymbolField;
            }
            set {
                this.newSymbolField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string ExchangeCode {
            get {
                return this.exchangeCodeField;
            }
            set {
                this.exchangeCodeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string NewExchangeCode {
            get {
                return this.newExchangeCodeField;
            }
            set {
                this.newExchangeCodeField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.33440")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://ws.eoddata.com/Data")]
    public partial class TECHNICAL {
        
        private string symbolField;
        
        private string nameField;
        
        private string descriptionField;
        
        private System.DateTime dateTimeField;
        
        private double previousField;
        
        private double changeField;
        
        private int mA1Field;
        
        private int mA2Field;
        
        private int mA5Field;
        
        private int mA20Field;
        
        private int mA50Field;
        
        private int mA100Field;
        
        private int mA200Field;
        
        private double mAPercentField;
        
        private double mAReturnField;
        
        private long volumeChangeField;
        
        private double threeMonthChangeField;
        
        private double sixMonthChangeField;
        
        private double weekHighField;
        
        private double weekLowField;
        
        private double weekChangeField;
        
        private double avgWeekChangeField;
        
        private double avgWeekVolumeField;
        
        private double weekVolumeField;
        
        private double monthHighField;
        
        private double monthLowField;
        
        private double monthChangeField;
        
        private double avgMonthChangeField;
        
        private double avgMonthVolumeField;
        
        private double monthVolumeField;
        
        private double yearHighField;
        
        private double yearLowField;
        
        private double yearChangeField;
        
        private double avgYearChangeField;
        
        private double avgYearVolumeField;
        
        private double yTDChangeField;
        
        private double rSI14Field;
        
        private double sTO9Field;
        
        private double wPR14Field;
        
        private double mTM14Field;
        
        private double rOC14Field;
        
        private long pTCField;
        
        private double sARField;
        
        private double volatilityField;
        
        private double liquidityField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string Symbol {
            get {
                return this.symbolField;
            }
            set {
                this.symbolField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string Name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string Description {
            get {
                return this.descriptionField;
            }
            set {
                this.descriptionField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public System.DateTime DateTime {
            get {
                return this.dateTimeField;
            }
            set {
                this.dateTimeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public double Previous {
            get {
                return this.previousField;
            }
            set {
                this.previousField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public double Change {
            get {
                return this.changeField;
            }
            set {
                this.changeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public int MA1 {
            get {
                return this.mA1Field;
            }
            set {
                this.mA1Field = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public int MA2 {
            get {
                return this.mA2Field;
            }
            set {
                this.mA2Field = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public int MA5 {
            get {
                return this.mA5Field;
            }
            set {
                this.mA5Field = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public int MA20 {
            get {
                return this.mA20Field;
            }
            set {
                this.mA20Field = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public int MA50 {
            get {
                return this.mA50Field;
            }
            set {
                this.mA50Field = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public int MA100 {
            get {
                return this.mA100Field;
            }
            set {
                this.mA100Field = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public int MA200 {
            get {
                return this.mA200Field;
            }
            set {
                this.mA200Field = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public double MAPercent {
            get {
                return this.mAPercentField;
            }
            set {
                this.mAPercentField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public double MAReturn {
            get {
                return this.mAReturnField;
            }
            set {
                this.mAReturnField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public long VolumeChange {
            get {
                return this.volumeChangeField;
            }
            set {
                this.volumeChangeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public double ThreeMonthChange {
            get {
                return this.threeMonthChangeField;
            }
            set {
                this.threeMonthChangeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public double SixMonthChange {
            get {
                return this.sixMonthChangeField;
            }
            set {
                this.sixMonthChangeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public double WeekHigh {
            get {
                return this.weekHighField;
            }
            set {
                this.weekHighField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public double WeekLow {
            get {
                return this.weekLowField;
            }
            set {
                this.weekLowField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public double WeekChange {
            get {
                return this.weekChangeField;
            }
            set {
                this.weekChangeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public double AvgWeekChange {
            get {
                return this.avgWeekChangeField;
            }
            set {
                this.avgWeekChangeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public double AvgWeekVolume {
            get {
                return this.avgWeekVolumeField;
            }
            set {
                this.avgWeekVolumeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public double WeekVolume {
            get {
                return this.weekVolumeField;
            }
            set {
                this.weekVolumeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public double MonthHigh {
            get {
                return this.monthHighField;
            }
            set {
                this.monthHighField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public double MonthLow {
            get {
                return this.monthLowField;
            }
            set {
                this.monthLowField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public double MonthChange {
            get {
                return this.monthChangeField;
            }
            set {
                this.monthChangeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public double AvgMonthChange {
            get {
                return this.avgMonthChangeField;
            }
            set {
                this.avgMonthChangeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public double AvgMonthVolume {
            get {
                return this.avgMonthVolumeField;
            }
            set {
                this.avgMonthVolumeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public double MonthVolume {
            get {
                return this.monthVolumeField;
            }
            set {
                this.monthVolumeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public double YearHigh {
            get {
                return this.yearHighField;
            }
            set {
                this.yearHighField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public double YearLow {
            get {
                return this.yearLowField;
            }
            set {
                this.yearLowField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public double YearChange {
            get {
                return this.yearChangeField;
            }
            set {
                this.yearChangeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public double AvgYearChange {
            get {
                return this.avgYearChangeField;
            }
            set {
                this.avgYearChangeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public double AvgYearVolume {
            get {
                return this.avgYearVolumeField;
            }
            set {
                this.avgYearVolumeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public double YTDChange {
            get {
                return this.yTDChangeField;
            }
            set {
                this.yTDChangeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public double RSI14 {
            get {
                return this.rSI14Field;
            }
            set {
                this.rSI14Field = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public double STO9 {
            get {
                return this.sTO9Field;
            }
            set {
                this.sTO9Field = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public double WPR14 {
            get {
                return this.wPR14Field;
            }
            set {
                this.wPR14Field = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public double MTM14 {
            get {
                return this.mTM14Field;
            }
            set {
                this.mTM14Field = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public double ROC14 {
            get {
                return this.rOC14Field;
            }
            set {
                this.rOC14Field = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public long PTC {
            get {
                return this.pTCField;
            }
            set {
                this.pTCField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public double SAR {
            get {
                return this.sARField;
            }
            set {
                this.sARField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public double Volatility {
            get {
                return this.volatilityField;
            }
            set {
                this.volatilityField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public double Liquidity {
            get {
                return this.liquidityField;
            }
            set {
                this.liquidityField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.33440")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://ws.eoddata.com/Data")]
    public partial class FUNDAMENTAL {
        
        private string symbolField;
        
        private string nameField;
        
        private string descriptionField;
        
        private System.DateTime dateTimeField;
        
        private string industryField;
        
        private string sectorField;
        
        private long sharesField;
        
        private long marketCapField;
        
        private double peField;
        
        private double ePSField;
        
        private double nTAField;
        
        private double divYieldField;
        
        private double dividendField;
        
        private System.DateTime dividendDateField;
        
        private double dPSField;
        
        private double imputationCreditsField;
        
        private double eBITDAField;
        
        private double pEGField;
        
        private double ptSField;
        
        private double ptBField;
        
        private double yieldField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string Symbol {
            get {
                return this.symbolField;
            }
            set {
                this.symbolField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string Name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string Description {
            get {
                return this.descriptionField;
            }
            set {
                this.descriptionField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public System.DateTime DateTime {
            get {
                return this.dateTimeField;
            }
            set {
                this.dateTimeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string Industry {
            get {
                return this.industryField;
            }
            set {
                this.industryField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string Sector {
            get {
                return this.sectorField;
            }
            set {
                this.sectorField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public long Shares {
            get {
                return this.sharesField;
            }
            set {
                this.sharesField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public long MarketCap {
            get {
                return this.marketCapField;
            }
            set {
                this.marketCapField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public double PE {
            get {
                return this.peField;
            }
            set {
                this.peField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public double EPS {
            get {
                return this.ePSField;
            }
            set {
                this.ePSField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public double NTA {
            get {
                return this.nTAField;
            }
            set {
                this.nTAField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public double DivYield {
            get {
                return this.divYieldField;
            }
            set {
                this.divYieldField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public double Dividend {
            get {
                return this.dividendField;
            }
            set {
                this.dividendField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public System.DateTime DividendDate {
            get {
                return this.dividendDateField;
            }
            set {
                this.dividendDateField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public double DPS {
            get {
                return this.dPSField;
            }
            set {
                this.dPSField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public double ImputationCredits {
            get {
                return this.imputationCreditsField;
            }
            set {
                this.imputationCreditsField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public double EBITDA {
            get {
                return this.eBITDAField;
            }
            set {
                this.eBITDAField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public double PEG {
            get {
                return this.pEGField;
            }
            set {
                this.pEGField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public double PtS {
            get {
                return this.ptSField;
            }
            set {
                this.ptSField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public double PtB {
            get {
                return this.ptBField;
            }
            set {
                this.ptBField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public double Yield {
            get {
                return this.yieldField;
            }
            set {
                this.yieldField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.33440")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://ws.eoddata.com/Data")]
    public partial class CountryBase {
        
        private string codeField;
        
        private string nameField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string Code {
            get {
                return this.codeField;
            }
            set {
                this.codeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string Name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.33440")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://ws.eoddata.com/Data")]
    public partial class SPLIT {
        
        private string exchangeField;
        
        private string symbolField;
        
        private System.DateTime dateTimeField;
        
        private string ratioField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string Exchange {
            get {
                return this.exchangeField;
            }
            set {
                this.exchangeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string Symbol {
            get {
                return this.symbolField;
            }
            set {
                this.symbolField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public System.DateTime DateTime {
            get {
                return this.dateTimeField;
            }
            set {
                this.dateTimeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string Ratio {
            get {
                return this.ratioField;
            }
            set {
                this.ratioField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.33440")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://ws.eoddata.com/Data")]
    public partial class QUOTE2 {
        
        private string sField;
        
        private System.DateTime dField;
        
        private double oField;
        
        private double hField;
        
        private double lField;
        
        private double cField;
        
        private long vField;
        
        private long iField;
        
        private double bField;
        
        private double aField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string s {
            get {
                return this.sField;
            }
            set {
                this.sField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public System.DateTime d {
            get {
                return this.dField;
            }
            set {
                this.dField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public double o {
            get {
                return this.oField;
            }
            set {
                this.oField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public double h {
            get {
                return this.hField;
            }
            set {
                this.hField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public double l {
            get {
                return this.lField;
            }
            set {
                this.lField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public double c {
            get {
                return this.cField;
            }
            set {
                this.cField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public long v {
            get {
                return this.vField;
            }
            set {
                this.vField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public long i {
            get {
                return this.iField;
            }
            set {
                this.iField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public double b {
            get {
                return this.bField;
            }
            set {
                this.bField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public double a {
            get {
                return this.aField;
            }
            set {
                this.aField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.33440")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://ws.eoddata.com/Data")]
    public partial class QUOTE {
        
        private string symbolField;
        
        private string descriptionField;
        
        private string nameField;
        
        private System.DateTime dateTimeField;
        
        private double openField;
        
        private double highField;
        
        private double lowField;
        
        private double closeField;
        
        private long volumeField;
        
        private long openInterestField;
        
        private double previousField;
        
        private double changeField;
        
        private double bidField;
        
        private double askField;
        
        private double previousCloseField;
        
        private double nextOpenField;
        
        private System.DateTime modifiedField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string Symbol {
            get {
                return this.symbolField;
            }
            set {
                this.symbolField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string Description {
            get {
                return this.descriptionField;
            }
            set {
                this.descriptionField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string Name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public System.DateTime DateTime {
            get {
                return this.dateTimeField;
            }
            set {
                this.dateTimeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public double Open {
            get {
                return this.openField;
            }
            set {
                this.openField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public double High {
            get {
                return this.highField;
            }
            set {
                this.highField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public double Low {
            get {
                return this.lowField;
            }
            set {
                this.lowField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public double Close {
            get {
                return this.closeField;
            }
            set {
                this.closeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public long Volume {
            get {
                return this.volumeField;
            }
            set {
                this.volumeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public long OpenInterest {
            get {
                return this.openInterestField;
            }
            set {
                this.openInterestField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public double Previous {
            get {
                return this.previousField;
            }
            set {
                this.previousField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public double Change {
            get {
                return this.changeField;
            }
            set {
                this.changeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public double Bid {
            get {
                return this.bidField;
            }
            set {
                this.bidField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public double Ask {
            get {
                return this.askField;
            }
            set {
                this.askField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public double PreviousClose {
            get {
                return this.previousCloseField;
            }
            set {
                this.previousCloseField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public double NextOpen {
            get {
                return this.nextOpenField;
            }
            set {
                this.nextOpenField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public System.DateTime Modified {
            get {
                return this.modifiedField;
            }
            set {
                this.modifiedField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.33440")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://ws.eoddata.com/Data")]
    public partial class SYMBOL2 {
        
        private string cField;
        
        private string nField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string c {
            get {
                return this.cField;
            }
            set {
                this.cField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string n {
            get {
                return this.nField;
            }
            set {
                this.nField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.33440")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://ws.eoddata.com/Data")]
    public partial class SYMBOL {
        
        private string codeField;
        
        private string nameField;
        
        private string longNameField;
        
        private System.DateTime dateTimeField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string Code {
            get {
                return this.codeField;
            }
            set {
                this.codeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string Name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string LongName {
            get {
                return this.longNameField;
            }
            set {
                this.longNameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public System.DateTime DateTime {
            get {
                return this.dateTimeField;
            }
            set {
                this.dateTimeField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.33440")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://ws.eoddata.com/Data")]
    public partial class EXCHANGE {
        
        private string codeField;
        
        private string nameField;
        
        private System.DateTime lastTradeDateTimeField;
        
        private string countryField;
        
        private string currencyField;
        
        private int advancesField;
        
        private int declinesField;
        
        private string suffixField;
        
        private string timeZoneField;
        
        private bool isIntradayField;
        
        private System.DateTime intradayStartDateField;
        
        private bool hasIntradayProductField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string Code {
            get {
                return this.codeField;
            }
            set {
                this.codeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string Name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public System.DateTime LastTradeDateTime {
            get {
                return this.lastTradeDateTimeField;
            }
            set {
                this.lastTradeDateTimeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string Country {
            get {
                return this.countryField;
            }
            set {
                this.countryField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string Currency {
            get {
                return this.currencyField;
            }
            set {
                this.currencyField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public int Advances {
            get {
                return this.advancesField;
            }
            set {
                this.advancesField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public int Declines {
            get {
                return this.declinesField;
            }
            set {
                this.declinesField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string Suffix {
            get {
                return this.suffixField;
            }
            set {
                this.suffixField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string TimeZone {
            get {
                return this.timeZoneField;
            }
            set {
                this.timeZoneField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public bool IsIntraday {
            get {
                return this.isIntradayField;
            }
            set {
                this.isIntradayField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public System.DateTime IntradayStartDate {
            get {
                return this.intradayStartDateField;
            }
            set {
                this.intradayStartDateField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public bool HasIntradayProduct {
            get {
                return this.hasIntradayProductField;
            }
            set {
                this.hasIntradayProductField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.33440")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://ws.eoddata.com/Data")]
    public partial class RESPONSE {
        
        private EXCHANGE eXCHANGEField;
        
        private EXCHANGE[] eXCHANGESField;
        
        private SYMBOL sYMBOLField;
        
        private SYMBOL[] sYMBOLSField;
        
        private SYMBOL2[] sYMBOLS2Field;
        
        private QUOTE qUOTEField;
        
        private QUOTE[] qUOTESField;
        
        private QUOTE2[] qUOTES2Field;
        
        private SPLIT[] sPLITSField;
        
        private CountryBase[] cOUNTRIESField;
        
        private FUNDAMENTAL[] fUNDAMENTALSField;
        
        private TECHNICAL[] tECHNICALSField;
        
        private SYMBOLCHANGE[] sYMBOLCHANGESField;
        
        private string cHARTField;
        
        private string mEMBERSHIPField;
        
        private string vERSIONField;
        
        private string mONTHSField;
        
        private DATAFORMAT[] dATAFORMATSField;
        
        private string sourceField;
        
        private string messageField;
        
        private System.DateTime dateField;
        
        /// <remarks/>
        public EXCHANGE EXCHANGE {
            get {
                return this.eXCHANGEField;
            }
            set {
                this.eXCHANGEField = value;
            }
        }
        
        /// <remarks/>
        public EXCHANGE[] EXCHANGES {
            get {
                return this.eXCHANGESField;
            }
            set {
                this.eXCHANGESField = value;
            }
        }
        
        /// <remarks/>
        public SYMBOL SYMBOL {
            get {
                return this.sYMBOLField;
            }
            set {
                this.sYMBOLField = value;
            }
        }
        
        /// <remarks/>
        public SYMBOL[] SYMBOLS {
            get {
                return this.sYMBOLSField;
            }
            set {
                this.sYMBOLSField = value;
            }
        }
        
        /// <remarks/>
        public SYMBOL2[] SYMBOLS2 {
            get {
                return this.sYMBOLS2Field;
            }
            set {
                this.sYMBOLS2Field = value;
            }
        }
        
        /// <remarks/>
        public QUOTE QUOTE {
            get {
                return this.qUOTEField;
            }
            set {
                this.qUOTEField = value;
            }
        }
        
        /// <remarks/>
        public QUOTE[] QUOTES {
            get {
                return this.qUOTESField;
            }
            set {
                this.qUOTESField = value;
            }
        }
        
        /// <remarks/>
        public QUOTE2[] QUOTES2 {
            get {
                return this.qUOTES2Field;
            }
            set {
                this.qUOTES2Field = value;
            }
        }
        
        /// <remarks/>
        public SPLIT[] SPLITS {
            get {
                return this.sPLITSField;
            }
            set {
                this.sPLITSField = value;
            }
        }
        
        /// <remarks/>
        public CountryBase[] COUNTRIES {
            get {
                return this.cOUNTRIESField;
            }
            set {
                this.cOUNTRIESField = value;
            }
        }
        
        /// <remarks/>
        public FUNDAMENTAL[] FUNDAMENTALS {
            get {
                return this.fUNDAMENTALSField;
            }
            set {
                this.fUNDAMENTALSField = value;
            }
        }
        
        /// <remarks/>
        public TECHNICAL[] TECHNICALS {
            get {
                return this.tECHNICALSField;
            }
            set {
                this.tECHNICALSField = value;
            }
        }
        
        /// <remarks/>
        public SYMBOLCHANGE[] SYMBOLCHANGES {
            get {
                return this.sYMBOLCHANGESField;
            }
            set {
                this.sYMBOLCHANGESField = value;
            }
        }
        
        /// <remarks/>
        public string CHART {
            get {
                return this.cHARTField;
            }
            set {
                this.cHARTField = value;
            }
        }
        
        /// <remarks/>
        public string MEMBERSHIP {
            get {
                return this.mEMBERSHIPField;
            }
            set {
                this.mEMBERSHIPField = value;
            }
        }
        
        /// <remarks/>
        public string VERSION {
            get {
                return this.vERSIONField;
            }
            set {
                this.vERSIONField = value;
            }
        }
        
        /// <remarks/>
        public string MONTHS {
            get {
                return this.mONTHSField;
            }
            set {
                this.mONTHSField = value;
            }
        }
        
        /// <remarks/>
        public DATAFORMAT[] DATAFORMATS {
            get {
                return this.dATAFORMATSField;
            }
            set {
                this.dATAFORMATSField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string Source {
            get {
                return this.sourceField;
            }
            set {
                this.sourceField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string Message {
            get {
                return this.messageField;
            }
            set {
                this.messageField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public System.DateTime Date {
            get {
                return this.dateField;
            }
            set {
                this.dateField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void LoginCompletedEventHandler(object sender, LoginCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class LoginCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal LoginCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public LOGINRESPONSE Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((LOGINRESPONSE)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void Login2CompletedEventHandler(object sender, Login2CompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Login2CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Login2CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public LOGINRESPONSE Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((LOGINRESPONSE)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void MembershipCompletedEventHandler(object sender, MembershipCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class MembershipCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal MembershipCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public RESPONSE Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((RESPONSE)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void ExchangeListCompletedEventHandler(object sender, ExchangeListCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ExchangeListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ExchangeListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public RESPONSE Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((RESPONSE)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void ExchangeGetCompletedEventHandler(object sender, ExchangeGetCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ExchangeGetCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ExchangeGetCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public RESPONSE Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((RESPONSE)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void SymbolListCompletedEventHandler(object sender, SymbolListCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SymbolListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SymbolListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public RESPONSE Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((RESPONSE)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void SymbolList2CompletedEventHandler(object sender, SymbolList2CompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SymbolList2CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SymbolList2CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public RESPONSE Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((RESPONSE)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void QuoteGetCompletedEventHandler(object sender, QuoteGetCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class QuoteGetCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal QuoteGetCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public RESPONSE Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((RESPONSE)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void QuoteList2CompletedEventHandler(object sender, QuoteList2CompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class QuoteList2CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal QuoteList2CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public RESPONSE Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((RESPONSE)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void SymbolGetCompletedEventHandler(object sender, SymbolGetCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SymbolGetCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SymbolGetCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public RESPONSE Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((RESPONSE)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void QuoteListCompletedEventHandler(object sender, QuoteListCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class QuoteListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal QuoteListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public RESPONSE Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((RESPONSE)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void FundamentalListCompletedEventHandler(object sender, FundamentalListCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FundamentalListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FundamentalListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public RESPONSE Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((RESPONSE)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void TechnicalListCompletedEventHandler(object sender, TechnicalListCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class TechnicalListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal TechnicalListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public RESPONSE Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((RESPONSE)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void QuoteListByDateCompletedEventHandler(object sender, QuoteListByDateCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class QuoteListByDateCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal QuoteListByDateCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public RESPONSE Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((RESPONSE)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void QuoteListByDate2CompletedEventHandler(object sender, QuoteListByDate2CompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class QuoteListByDate2CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal QuoteListByDate2CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public RESPONSE Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((RESPONSE)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void SymbolHistoryCompletedEventHandler(object sender, SymbolHistoryCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SymbolHistoryCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SymbolHistoryCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public RESPONSE Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((RESPONSE)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void Top10GainsCompletedEventHandler(object sender, Top10GainsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Top10GainsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Top10GainsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public RESPONSE Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((RESPONSE)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void Top10LossesCompletedEventHandler(object sender, Top10LossesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Top10LossesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Top10LossesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public RESPONSE Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((RESPONSE)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void SymbolChartCompletedEventHandler(object sender, SymbolChartCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SymbolChartCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SymbolChartCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public RESPONSE Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((RESPONSE)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void ExchangeMonthsCompletedEventHandler(object sender, ExchangeMonthsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ExchangeMonthsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ExchangeMonthsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public RESPONSE Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((RESPONSE)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void SplitListByExchangeCompletedEventHandler(object sender, SplitListByExchangeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SplitListByExchangeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SplitListByExchangeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public RESPONSE Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((RESPONSE)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void SplitListBySymbolCompletedEventHandler(object sender, SplitListBySymbolCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SplitListBySymbolCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SplitListBySymbolCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public RESPONSE Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((RESPONSE)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void CountryListCompletedEventHandler(object sender, CountryListCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CountryListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CountryListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public RESPONSE Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((RESPONSE)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void SymbolHistoryPeriodCompletedEventHandler(object sender, SymbolHistoryPeriodCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SymbolHistoryPeriodCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SymbolHistoryPeriodCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public RESPONSE Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((RESPONSE)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void SymbolHistoryPeriodByDateRangeCompletedEventHandler(object sender, SymbolHistoryPeriodByDateRangeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SymbolHistoryPeriodByDateRangeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SymbolHistoryPeriodByDateRangeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public RESPONSE Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((RESPONSE)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void QuoteListByDatePeriodCompletedEventHandler(object sender, QuoteListByDatePeriodCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class QuoteListByDatePeriodCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal QuoteListByDatePeriodCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public RESPONSE Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((RESPONSE)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void QuoteListByDatePeriod2CompletedEventHandler(object sender, QuoteListByDatePeriod2CompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class QuoteListByDatePeriod2CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal QuoteListByDatePeriod2CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public RESPONSE Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((RESPONSE)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void SymbolChangesByExchangeCompletedEventHandler(object sender, SymbolChangesByExchangeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SymbolChangesByExchangeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SymbolChangesByExchangeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public RESPONSE Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((RESPONSE)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void DataClientLatestVersionCompletedEventHandler(object sender, DataClientLatestVersionCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DataClientLatestVersionCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DataClientLatestVersionCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public RESPONSE Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((RESPONSE)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void DataFormatsCompletedEventHandler(object sender, DataFormatsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DataFormatsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DataFormatsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public RESPONSE Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((RESPONSE)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void UpdateDataFormatCompletedEventHandler(object sender, UpdateDataFormatCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdateDataFormatCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdateDataFormatCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public RESPONSE Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((RESPONSE)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void ValidateAccessCompletedEventHandler(object sender, ValidateAccessCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ValidateAccessCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ValidateAccessCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public RESPONSE Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((RESPONSE)(this.results[0]));
            }
        }
    }
}

#pragma warning restore 1591